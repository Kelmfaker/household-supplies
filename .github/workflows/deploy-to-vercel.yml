name: Deploy to Vercel

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Vercel CLI
        run: npm i -g vercel@48

      - name: "Debug: list Vercel projects accessible to token"
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          echo "Listing Vercel projects visible to the token (may be empty if token has limited scope):"
          vercel projects ls --token $VERCEL_TOKEN || echo "Could not list projects (token may lack permissions or be invalid)"

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID || '' }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID || '' }}
        run: |
          set -e
          echo "Vercel CLI version: $(vercel --version)"
          echo "Checking for optional Vercel project/org secrets..."
          if [ -n "$VERCEL_PROJECT_ID" ] || [ -n "$VERCEL_ORG_ID" ]; then
            echo "Using provided VERCEL_PROJECT_ID/VERCEL_ORG_ID for deployment"
            CLI_ARGS="--token $VERCEL_TOKEN --prod --confirm"
            if [ -n "$VERCEL_PROJECT_ID" ]; then
              CLI_ARGS="$CLI_ARGS --project $VERCEL_PROJECT_ID"
            fi
            if [ -n "$VERCEL_ORG_ID" ]; then
              CLI_ARGS="$CLI_ARGS --scope $VERCEL_ORG_ID"
            fi
            echo "Running: vercel $CLI_ARGS"
            sh -c "vercel $CLI_ARGS"
          else
            echo "No VERCEL_PROJECT_ID/VERCEL_ORG_ID provided. Attempting auto-detect deploy."
            echo "If you see 'Project not found' ensure the repository is linked in Vercel or set VERCEL_PROJECT_ID and VERCEL_ORG_ID as secrets."
            vercel --token $VERCEL_TOKEN --prod --confirm || (echo "Vercel deploy failed; see docs in VERCEL_DEPLOY.md" && exit 1)
          fi
